0611001924974 IW36W822739

import os , json, re, sys, time ,random
import requests
import websocket
from hashlib import md5
import socketio
#os.system()
username = 'Quanzan9401'
password= 'QuanaBi'
ipg_ = 'd19e95498a8e365f9dbe0533681b4e9a'
ipg = '25b13fb5e76854d9443de11c5e4c5a9b'
'''
wsm xx ["6","MiniGame","shakeDiskPlugin",{"cmd":3008,"mgs":"Alo"}] ["6","MiniGame","taixiuCCPlugin",{"cmd":1011,"mgs":"Axxxxxx"}]
[5,{"As":{"gold":5201,"chip":31642,"guarranteed_gold":0,"time":1673869851806},"cmd":310}]

1674003710625
exit ()
["6","MiniGame","shakeDiskPlugin",{"cmd":3013,"iM":false}]

["6","MiniGame","shakeDiskPlugin",{"cmd":3001}]
----------
exit wsc

[6,"Simms","channelPlugin",{"cmd":"306","subi":true}]

[6,"Simms","channelPlugin",{"cmd":310}]
-------
sid :740123 ,md5 :1c87f0c675957eb069642bf02be5d812 [2, 5, 5, 2, 5, 2, 2]

eid2
sid :740119 ,md5 :851e2c4682ca100ac6854056cf1c4c26
[2, 5, 5]'''
url_api ='https://gateway-api.iwigate-up.com/esms/v1/profiler/iw'
url_web = 'https://iwin88.tv/' #url web https://win79.win/login.html',cookies=cookies
uri = re.findall('https://(.*?)/',url_web)[0]  #tách https
url1 = f'https://{uri}/login.html' #login
url2 = f'https://play.{uri}' #/?sessionid='+session_id+'&a=w79'


url_apiv2 = 'https://api.wsmt8g.co/v2/auth/token/login'

#wss://ws05.wsmt8g.co/socket.io/?token=34-8a2555bb04b59a47dc4bfc2ffcebb7f5&sv=v5&env=portal&games=all&ssid=9b6aaea21b6940eaa6790871bd9e4144&EIO=3&transport=websocket&t=OMMUSEw
def load_main():
  rq = requests.get(url_web)
  token = re.findall('meta name="csrf-token" content="(.*?)"',rq.text)[0] 
  rq = requests.get(url_api)
  load_config(token, rq.json())# set token json websocket


def _mssid():#Random Md5
  return md5(os.urandom(52)).hexdigest()[:31]
def load_config(token, api_json):
  api_id = api_json["data"][0]["app_info"]["app_id"]#.com
  ws_cardgame= api_json["data"][0]["server_vg"]["card_game"]['uri']
  ws_minigame = api_json["data"][0]["server_vg"]["mini_game"]['uri']
  headers = {
      'authority': uri,
      'accept': 'application/json, text/javascript, */*; q=0.01',
      'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
      'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
      # Requests sorts cookies= alphabetically
      # 'cookie': '_ga=GA1.2.1546051606.1667259572; _gid=GA1.2.138745179.1667259572',
      'origin': url_web,
      'sec-ch-ua': '"Chromium";v="107", "Not=A?Brand";v="24"',
      'sec-ch-ua-mobile': '?1',
      'sec-ch-ua-platform': '"Android"',
      'sec-fetch-dest': 'empty',
      'sec-fetch-mode': 'cors',
      'sec-fetch-site': 'same-origin',
      'user-agent': 'Mozilla/5.0 (Linux; Android 7.0; Redmi Note 4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Mobile Safari/537.36',
      'x-csrf-token': token,
      'x-requested-with': 'XMLHttpRequest',
    }
  data = {
    'source': uri,
    'aff_id': 'IWIN',
    'app_id': api_id,
    'browser': 'Chrome',
    'os': 'Android',
    'device': 'Desktop',
    'fg': ipg_,
    'utm_source': '',
    'utm_campaign': '',
    'utm_content': '',
    'utm_medium': '',
    'utm_term': '',
    'username': username,
    'password': password,
  
    }  
  #------- headers 

  
  ws = [ws_cardgame, ws_minigame]
  login_web(headers , data , ws )
  
  
def login_web(headers , data , ws ):
  ss=requests.post(url1, headers=headers, data=data) #login url, cookies=cookies, 
  session_id=ss.json()['session_id']
  url_ss = f'{url2}/?sessionid={session_id}&a=IWIN'
  ssion = requests.get(url_ss)
  time.sleep(30)
  api_gw= requests.get('https://gateway-api.iwigate-up.com/gwms/v1/verifytoken.aspx?token='+session_id+'&fg=' + ipg)
  ssid = _mssid()
  data1 ={
    'token': api_gw.json()['data'][0]['token'],
    'devive':'{"os":"Android","osVersion":"11","platform":"MOBILE_BROWSER","browser":"chrome","browserVersion":"107.0.0.0","language":"vi","ssid":"'+ssid+'"}'

    }
  headers1 = {
      'accept': '*/*' ,
      'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
      'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
      # Requests sorts cookies= alphabetically
      # 'cookie': '_ga=GA1.2.1546051606.1667259572; _gid=GA1.2.138745179.1667259572',
      'origin': url2,
      'referer':url2 + "/",
      'sec-ch-ua': '"Chromium";v="107", "Not=A?Brand";v="24"',
      'sec-ch-ua-mobile': '?1',
      'sec-ch-ua-plIWINatform': '"Android"',
      'sec-fetch-dest': 'empty',
      'sec-fetch-mode': 'cors',
      'sec-fetch-site': 'cross-site',
      'user-agent': 'Mozilla/5.0 (Linux; Android 7.0; Redmi Note 4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Mobile Safari/537.36'
  }
  req = requests.post(url_apiv2,headers = headers1, data = data1)
  gw_api = api_gw.json()
  if (gw_api['status'] == 'OK' ):
    print( gw_api['data'][0]['main_balance'])
    
    loadsio(ssid,gw_api['data'][0]['token'])
    load_ws(ws, gw_api['data'][0]['token'],gw_api['data'][0]['main_balance'])

def loadsio(ssid, api_gw):
  sio = socketio.Client()
  urlio=f"wss://ws05.wsmt8g.co/?token={api_gw}&sv=v5&env=portal&games=all&ssid={ssid}"
  print(urlio)
  headers ={'origin': url2}
  sio.connect(url=urlio, headers=headers,transports=["websocket"])
  #sio.wait()

def load_ws(wss,token,main_balance):
  print ('load ws')
  
  time.sleep(5)
  wsc = websocket.WebSocket()
  wsm = websocket.WebSocket()
  load_wscardgame(wsc, wss[0],token)
  load_wsminigame(wsm ,wsc, wss[1], token,main_balance)
def load_wscardgame(ws, wss, token):
  ws.connect(wss)
  sendms(ws,'[1,"Simms","","",{"agentId":"1","accessToken":"'+token+'","reconnect":false}]')
  sendms(ws, '[6,"Simms","channelPlugin",{"cmd":310}]')
  sendms(ws, '[6,"Simms","channelPlugin",{"cmd":"306","subi":true}]')
  sendms(ws, '[6,"Simms","channelPlugin",{"cmd":310}]')

def load_wsminigame(ws,wsc, wss, token, status):
  ws.connect(wss)
  sendms(ws,'[ 1 , "MiniGame" , "" , "" , { "agentId" : "1" , "accessToken" : "'+token+'" , "reconnect" : false } ]')
  sendms(ws,'[ 6 , " MiniGame" , "lobbyPlugin" , { "cmd" : 10001 } ]')
  sendms(ws,'["7", "MiniGame", "1",1]')
  sendms(ws,'["6","MiniGame","shakeDiskPlugin",{"cmd":3012,"iM":false}]')
  sendms(ws,'["6","MiniGame","shakeDiskPlugin",{"cmd":3000}]')
  sendms(wsc, '["7", "Simms", "1",1]')
  recvms(ws, wsc, status)
def sleep1s():
  time.sleep(0,2)
def exit(wsc,wsm):
  
  sendms(wsc,'[6,"Simms","channelPlugin",{"cmd":"306","subi":true}]')
  sleep1s()
  sendms(wsc, '[6,"Simms","channelPlugin",{"cmd":310}]')
  sleep1s()
  #-----
  sendms(wsm,'["6","MiniGame","shakeDiskPlugin",{"cmd":3013,"iM":false}]')
  sleep1s()
  sendms(wsm,'["6","MiniGame","shakeDiskPlugin",{"cmd":3001}]')
  
def connecxx(ws):
  sendms(ws,'["6","MiniGame","shakeDiskPlugin",{"cmd":3012,"iM":false}]')
  sendms(ws,'["6","MiniGame","shakeDiskPlugin",{"cmd":3000}]')
def sendms(ws, text):
  ws.send(text)
  print(ws.recv())

b =[]
slenh = 5 # chờ  - - - - -
bclick_gold = [2,4,8]
btalk = ["alo","heloo","all","win","520","love"]
btime =2
def re_rs(rc):
  re_52 = re.findall("{(.*?)}",rc)[0]
  if re_52 == "DDTT" or re_52 =="DDDD" or re_52 == "TTTT" :
    b.append(2)
    return 2
  else :
    b.append(5)
    return 5
  
def check():
  abi = b[::-1]
  for bi in range(slenh - 1):
    if abi[bi] != abi[bi +1] :
      return False
  return True
def eid_():
  abi = b[::-1]
  if abi[0] == 2 :
    eid =5
  else:
    eid =2
  #f'["6","MiniGame","shakeDiskPlugin",{"cmd":3002,"b":100,"sid":{sid},"aid":1,"eid":{eid}}}]'
  return eid
def onclick(ws ,wsc ,bclick_ ,sid , eid , bgold ):
  golda = 9999999999999
  breclick = False
  if bclick_ -1 < len(bclick_gold) :
    breclick = False
    print (f"bclick---{bclick_gold[bclick_ -1 ]} eid {eid}")
    for on_click in range(bclick_gold[bclick_ -1 ]) :
#["6","MiniGame","shakeDiskPlugin",{"cmd":3002,"b":100,"sid":729955,"aid":1,"eid":2}] 
      sendms(ws,'["6","MiniGame","shakeDiskPlugin",{"cmd":3002,"b":1000,"sid":'+str(sid)+',"aid":1,"eid":'+str(eid)+'}]') #lẻ
      golda = wsc.recv()
      time.sleep(2)
    print (golda[1]["As"]["gold"])
  else :
    breclick = True
    print('loads @@')
  if breclick :
    if bclick_ -1 < len(bclick_gold) + len(bclick_gold) :
      breclick = False
      bclick_ = bclick_ - 1 - len(bclick_gold)
      print (f"bclick---{bclick_gold[bclick_]} eid {eid}")
      for on_click in range(bclick_gold[bclick_]) :
  #["6","MiniGame","shakeDiskPlugin",{"cmd":3002,"b":100,"sid":729955,"aid":1,"eid":2}] 
        sendms(ws,'["6","MiniGame","shakeDiskPlugin",{"cmd":3002,"b":1000,"sid":'+str(sid)+',"aid":1,"eid":'+str(eid)+'}]') #lẻ
        golda = wsc.recv()
        time.sleep(2)
      print (golda[1]["As"]["gold"])
    else:
      breclick = False
      print(f'loads @@  {bclick_}') 
  
#[2, 2, 5, 5, 5, 5, 5, 2]
#--set chip click eid = 2 đỏ DDTT || eid =5 
def recvms(wsm,wsc, Bcoin):
  itime = 0
  bclick = 1
  inext = 1
  bwait = 1
  bq = 52
  bsid = 2
  bwin = True
  while True:
    itime  =itime + 1
    rc = wsm.recv()
    #print (rc)
  #  bgold = wsc.recv()
#   print (bgold)
    cr = json.loads(rc)
    if '"rs"' in rc : #{DDTT}
      reeid = re_rs(cr[1]["rs"])
      
      #print(f'{cr[1]["rs"]} {reeid}')
        if reeid == eidre :
          bclick = 1
      if "wm" in cr:
        if cr[1]["wm"] != 0 :
          print('win ' + str(cr[1]["wm"])) #"wm":396
              
    if '"cmd":3005' in rc or '"tJpVT2":0' in rc :
      #print(f'sid :{cr[1]["sid"]} ,md5 :{cr[1]["md5"]}')#ssid
      bwait = bwait + 1
      bsid= bsid + 1
      if bwait == 22 :
        bwait = random.randint(0,len(btalk) -1)
        talk = '["6","MiniGame","shakeDiskPlugin",{"cmd":3008,"mgs":"'+btalk[bwait]+'"}]'
        sendms(wsm, talk)
        bwait = 1
      #print(b)
      if len(b) > slenh :
        if check():
          onclick(wsm, bclick ,cr[1]["sid"] ,eid_() ,100)
          bclick = bclick + 1
          bsid = 2
          
          #print(f"bclick {bclick-1} ")
        else: 
          if bsid == 22:
            exit(wsc,wsm)
            time.sleep(2)
            connecxx(wsm)
            bsid = 2
            print('aBi connection a')
          bclick = 1
    #print('load ++')
    if itime == 15 :
      inext =inext + 1
      itime = 0
      #print(inext)
      sendms(wsm,f'["7", "MiniGame", "1",{inext}]')
      sendms(wsc,f'["7", "Simms", "1",{inext}]')
load_main()
